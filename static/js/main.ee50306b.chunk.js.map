{"version":3,"sources":["components/StockControl.js","App.js","reportWebVitals.js","index.js"],"names":["categories","StockControl","category","setCategory","useState","productName","setProductName","quantity","setQuantity","price","setPrice","profitMargin","setProfitMargin","Seda","Filtros","Tabacos","stock","setStock","log","setLog","handleDeleteProduct","id","productNameDeleted","find","product","name","prevStock","newStock","_objectSpread","filter","prevLog","concat","React","createElement","style","textAlign","padding","onChange","e","target","value","marginBottom","fontSize","map","cat","index","key","onClick","newMargin","prompt","marginValue","parseFloat","prevMargin","handleChangeProfitMargin","type","placeholder","marginRight","width","Number","handleAddProduct","alert","priceNum","replace","pricePerUnit","suggestedPrice","newProduct","Date","now","totalSuggestedPrice","dateAdded","toLocaleDateString","exits","toFixed","margin","borderCollapse","border","p","handleEditProduct","entry","reduce","total","calculateTotal","calculateTotalSuggestedSales","calculateTotalForAllCategories","Object","keys","forEach","catTotal","calculateTotalSuggestedSalesForAllCategories","App","className","reportWebVitals","onPerfEntry","Function","then","_ref","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","createRoot","document","getElementById","render","StrictMode"],"mappings":"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","file":"static/js/main.ee50306b.chunk.js","sourcesContent":["// src/components/StockControl.js\r\nimport React, { useState } from 'react';\r\n\r\nconst categories = ['Seda', 'Filtros', 'Tabacos'];\r\n\r\nconst StockControl = () => {\r\n  const [category, setCategory] = useState('');\r\n  const [productName, setProductName] = useState('');\r\n  const [quantity, setQuantity] = useState(0);\r\n  const [price, setPrice] = useState('');\r\n  const [profitMargin, setProfitMargin] = useState({\r\n    Seda: 2.85, // 185% de lucro (em termos de multiplicador)\r\n    Filtros: 1.5, // Valor de exemplo para Filtros (margem menor)\r\n    Tabacos: 2.0, // Valor de exemplo para Tabacos\r\n  });\r\n  const [stock, setStock] = useState({\r\n    Seda: [],\r\n    Filtros: [],\r\n    Tabacos: [],\r\n  });\r\n  \r\n  // Estado para armazenar o log de edições\r\n  const [log, setLog] = useState([]);\r\n\r\n  const handleAddProduct = () => {\r\n    if (!category || !productName || !quantity || !price) {\r\n      alert('Por favor, preencha todos os campos!');\r\n      return;\r\n    }\r\n\r\n    const priceNum = parseFloat(price.replace(',', '.')); // Garantir o formato correto de preço\r\n    const pricePerUnit = priceNum / quantity;\r\n\r\n    // Aplicando a margem de lucro específica para cada categoria\r\n    const suggestedPrice = pricePerUnit * profitMargin[category];\r\n\r\n    const newProduct = {\r\n      id: Date.now(), // ID único para cada produto\r\n      name: productName,\r\n      quantity,\r\n      price: priceNum,\r\n      pricePerUnit,\r\n      suggestedPrice,\r\n      totalSuggestedPrice: suggestedPrice * quantity, // Cálculo do valor total da caixa com base no valor sugerido\r\n      dateAdded: new Date().toLocaleDateString('pt-BR'), // Adicionando a data no formato dd/mm/aaaa\r\n      exits: [], // Registro das saídas\r\n    };\r\n\r\n    // Atualizando o estado do estoque\r\n    setStock(prevStock => {\r\n      const newStock = { ...prevStock };\r\n      newStock[category] = [...newStock[category], newProduct]; // Adicionando o novo produto\r\n      return newStock;\r\n    });\r\n\r\n    // Log da adição\r\n    setLog(prevLog => [\r\n      ...prevLog,\r\n      `Produto adicionado: ${productName} - Categoria: ${category} - Quantidade: ${quantity} - Preço: R$${priceNum.toFixed(2)}`\r\n    ]);\r\n\r\n    // Limpar os campos após adicionar o produto\r\n    setProductName('');\r\n    setQuantity(0);\r\n    setPrice('');\r\n  };\r\n\r\n  const handleDeleteProduct = (id) => {\r\n    const productNameDeleted = stock[category].find(product => product.id === id).name;\r\n\r\n    setStock(prevStock => {\r\n      const newStock = { ...prevStock };\r\n      newStock[category] = newStock[category].filter(product => product.id !== id);\r\n      return newStock;\r\n    });\r\n\r\n    // Log da exclusão\r\n    setLog(prevLog => [\r\n      ...prevLog,\r\n      `Produto removido: ${productNameDeleted} - Categoria: ${category}`\r\n    ]);\r\n  };\r\n\r\n  const handleEditProduct = (id) => {\r\n    const product = stock[category].find(p => p.id === id);\r\n    setProductName(product.name);\r\n    setQuantity(product.quantity);\r\n    setPrice(product.price.toFixed(2));\r\n    handleDeleteProduct(id);\r\n\r\n    // Log da edição\r\n    setLog(prevLog => [\r\n      ...prevLog,\r\n      `Produto editado: ${product.name} - Categoria: ${category} - Nova quantidade: ${quantity} - Novo preço: R$${price}`\r\n    ]);\r\n  };\r\n\r\n  // Calcular total gasto em cada categoria\r\n  const calculateTotal = (category) => {\r\n    return stock[category].reduce((total, product) => total + product.price, 0).toFixed(2);\r\n  };\r\n\r\n  // Calcular o total sugerido de venda por categoria\r\n  const calculateTotalSuggestedSales = (category) => {\r\n    return stock[category].reduce((total, product) => total + product.totalSuggestedPrice, 0).toFixed(2);\r\n  };\r\n\r\n  // Calcular o total de todas as categorias (só o valor gasto na compra)\r\n  const calculateTotalForAllCategories = () => {\r\n    let total = 0;\r\n    Object.keys(stock).forEach((cat) => {\r\n      total += stock[cat].reduce((catTotal, product) => catTotal + product.price, 0);\r\n    });\r\n    return total.toFixed(2);\r\n  };\r\n\r\n  // Calcular o total de vendas sugeridas para todas as categorias\r\n  const calculateTotalSuggestedSalesForAllCategories = () => {\r\n    let total = 0;\r\n    Object.keys(stock).forEach((cat) => {\r\n      total += stock[cat].reduce((catTotal, product) => catTotal + product.totalSuggestedPrice, 0);\r\n    });\r\n    return total.toFixed(2);\r\n  };\r\n\r\n  // Alterar margem de lucro por categoria\r\n  const handleChangeProfitMargin = (category) => {\r\n    const newMargin = prompt('Insira a nova margem de lucro (em porcentagem, ex: 185 para 185%)');\r\n    if (newMargin) {\r\n      const marginValue = parseFloat(newMargin) / 100 + 1; // Converter porcentagem para multiplicador\r\n      setProfitMargin(prevMargin => ({ ...prevMargin, [category]: marginValue }));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div style={{ textAlign: 'center', padding: '20px' }}>\r\n      <h2>Controle de Estoque Tabacrow</h2>\r\n\r\n      {/* Dropdown para escolher a categoria */}\r\n      <select\r\n        onChange={(e) => setCategory(e.target.value)}\r\n        value={category}\r\n        style={{ padding: '10px', marginBottom: '20px', fontSize: '16px' }}\r\n      >\r\n        <option value=\"\">Selecione uma categoria</option>\r\n        {categories.map((cat, index) => (\r\n          <option key={index} value={cat}>\r\n            {cat}\r\n          </option>\r\n        ))}\r\n        <option value=\"Todos\">Todas as Categorias</option>\r\n      </select>\r\n\r\n      {/* Botão de alteração da margem de lucro */}\r\n      {category && category !== 'Todos' && (\r\n        <button\r\n          onClick={() => handleChangeProfitMargin(category)}\r\n          style={{ padding: '10px 20px', marginBottom: '20px' }}\r\n        >\r\n          Alterar Margem de Lucro\r\n        </button>\r\n      )}\r\n\r\n      {/* Campos para nome, quantidade e preço */}\r\n      {category && category !== 'Todos' && (\r\n        <div style={{ marginBottom: '20px' }}>\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Nome do Produto\"\r\n            value={productName}\r\n            onChange={(e) => setProductName(e.target.value)}\r\n            style={{ padding: '10px', marginRight: '10px', width: '200px' }}\r\n          />\r\n          <input\r\n            type=\"number\"\r\n            placeholder=\"Quantidade por Caixa\"\r\n            value={quantity}\r\n            onChange={(e) => setQuantity(Number(e.target.value))}\r\n            style={{ padding: '10px', marginRight: '10px', width: '200px' }}\r\n          />\r\n          <input\r\n            type=\"text\"\r\n            placeholder=\"Valor da Caixa\"\r\n            value={price}\r\n            onChange={(e) => setPrice(e.target.value)}\r\n            style={{ padding: '10px', marginRight: '10px', width: '200px' }}\r\n          />\r\n          <button\r\n            onClick={handleAddProduct}\r\n            style={{ padding: '10px 20px', fontSize: '16px' }}\r\n          >\r\n            Adicionar Produto\r\n          </button>\r\n        </div>\r\n      )}\r\n\r\n      {/* Exibição dos produtos cadastrados por categoria em formato de tabela */}\r\n      {category && category !== 'Todos' && (\r\n        <div>\r\n          <table style={{ width: '80%', margin: '0 auto', borderCollapse: 'collapse' }}>\r\n            <thead>\r\n              <tr>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Produto</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Quantidade</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Preço Pago</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Preço Unitário</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Preço Sugerido</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Valor Total Sugerido</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Data de Adição</th>\r\n                <th style={{ padding: '10px', border: '1px solid #ddd' }}>Ações</th>\r\n              </tr>\r\n            </thead>\r\n            <tbody>\r\n              {stock[category].map((product) => (\r\n                <tr key={product.id}>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>{product.name}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>{product.quantity}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>R${product.price.toFixed(2)}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>R${product.pricePerUnit.toFixed(2)}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>R${product.suggestedPrice.toFixed(2)}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>R${product.totalSuggestedPrice.toFixed(2)}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>{product.dateAdded}</td>\r\n                  <td style={{ padding: '10px', border: '1px solid #ddd' }}>\r\n                    <button\r\n                      onClick={() => handleEditProduct(product.id)}\r\n                      style={{ padding: '5px 10px', fontSize: '14px', marginRight: '5px' }}\r\n                    >\r\n                      Editar\r\n                    </button>\r\n                    <button\r\n                      onClick={() => handleDeleteProduct(product.id)}\r\n                      style={{ padding: '5px 10px', fontSize: '14px' }}\r\n                    >\r\n                      Remover\r\n                    </button>\r\n                  </td>\r\n                </tr>\r\n              ))}\r\n            </tbody>\r\n          </table>\r\n        </div>\r\n      )}\r\n\r\n      {/* Exibindo o log de edições */}\r\n      {category === 'Todos' && (\r\n        <div>\r\n          <h3>Log de Edições</h3>\r\n          <ul>\r\n            {log.map((entry, index) => (\r\n              <li key={index}>{entry}</li>\r\n            ))}\r\n          </ul>\r\n        </div>\r\n      )}\r\n\r\n      {/* Totais por categoria */}\r\n      {category && category !== 'Todos' && (\r\n        <div>\r\n          <h3>Totais</h3>\r\n          <p>Total Gasto: R${calculateTotal(category)}</p>\r\n          <p>Total Sugerido: R${calculateTotalSuggestedSales(category)}</p>\r\n        </div>\r\n      )}\r\n\r\n      {/* Totais para todas as categorias */}\r\n      <div>\r\n        <h3>Total Geral</h3>\r\n        <p>Total Gasto em Todas as Categorias: R${calculateTotalForAllCategories()}</p>\r\n        <p>Total Sugerido para Venda em Todas as Categorias: R${calculateTotalSuggestedSalesForAllCategories()}</p>\r\n      </div>\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default StockControl;\r\n","import React from \"react\";\nimport StockControl from \"./components/StockControl\";\nimport \"./App.css\";\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      <StockControl />\n    </div>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom/client';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nconst root = ReactDOM.createRoot(document.getElementById('root'));\nroot.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}